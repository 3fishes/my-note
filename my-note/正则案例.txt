邮箱匹配
开头：  1个以上的合法字符
	一个@
	1个以上的合法字符
	一个点(需要转义符)
	后缀1个以上的合法字符
	.cn 可有可无
表达式： \w+@\w+\.\w+(\.cn)?


千分符匹配
要求，离结尾或者.每三位，匹配一个，
表达式：\d(?=(\d{3})+(\.|$))


密码强度匹配
至少包含数字，大写字母，小写字母，不含特殊符号
^(?![0-9A-Z])+$   从头到尾不全是数字和大写字母（至少包含1个小写字母）
^(?![0-9a-z])+$   从头到尾不全是数字和小写字母（至少包含1个小写字母）
^[0-9A-Za-z]{6,}$ 从头到尾是6位以上的数字或大小写字母（不包含特殊符号）
表达式：^（(?![0-9A-Z])+$ ）（(?![0-9a-z])+$ ）[0-9A-Za-z]{6,}$

 
完整手机号匹配
要求:
开头：+86或者0086整体可有可无，最多一次
开头和第一位直接加空字符，至少1个，可以多个
第一位: 1
第二位：3、4、5、6、7、8、9中选其一
后9位，每一位上都是从0~9十个数字中任选其一
表达式：
((\+86|0086)\s+)?1[3-9]\d{9}




汽车车牌匹配
要求：
第一位：一个汉字
第二位：一个大写字母
第三位：点
后五位：五个大写字母或数字
表达式：[\u4e00-\u9fa5][A-Z]・[A-Z0-9]{5}




身份证号匹配
要求：
老号码15位数字
新号码18位，最后一位为1位数字或x,最后三位可有可无，最多18位
表达式：
\d{15}(\d\d[0-9x])?




匹配“微信”，“weixin”，“w x”等情况，并防止中间加空格――不用防wechat
表达式： (微|w（ei）?)(信|x(in)?)







贪婪模式与短路逻辑
贪婪模式: 正则表达式总是尽量匹配最长的符合正则要求的字符串。能匹配到6位，就绝不匹配4位！
逻辑短路：| 不遵守贪婪模式，而是和js程序一样采用短路逻辑短路逻辑: 如果前一个条件已经可以匹配字符串中的部分内容，则后一个条件不再执行！

